{
  "name": "@i/repository",
  "imports": {
    "#lib": "./src/*",
    "#db": "./db/*"
  },
  "exports": {
    "./KVPostgresStore": "./src/kvStore/KVPostgresStore.ts",
    "./KVStore": "./src/kvStore/KVStore.ts",
    "./TownRepositoryPostgres": "./src/TownRepositoryPostgres.ts",
    "./BusinessRepositoryPostgres": "./src/BusinessRepositoryPostgres.ts",
    "./LinkRepositoryPostgres": "./src/LinkRepositoryPostgres.ts",
    "./LocationRepositoryPostgres": "./src/LocationRepositoryPostgres.ts",
    "./SourceRepositoryPostgres": "./src/SourceRepositoryPostgres.ts",
    "./ProductRepositoryPostgres": "./src/ProductRepositoryPostgres.ts",
    "./getDb": "./src/getDb.ts"
  },
  "scripts": {
    "typecheck": "tsc --noEmit",
    "test:db": "vitest run **/*.db.test.ts",
    "tdd:db": "vitest **/*.db.test.ts",
    "db": "docker-compose --project-name indiedb up -d",
    "db:up": "pnpm db && sleep 2 && pnpm mig:up && pnpm towns",
    "db:destroy": "docker-compose --project-name indiedb down -v",
    "db:reset": "pnpm db:destroy && pnpm db:up",
    "mig:new": "drizzle-kit generate",
    "mig:up": "drizzle-kit migrate",
    "mig:push": "drizzle-kit push",
    "towns": "cd towns && sh ./install.sh",
    "mock": "tsx src/mock-data/mock.ts",
    "mock:towns": "tsx src/mock-data/towns.ts"
  },
  "dependencies": {
    "@i/core": "workspace:*",
    "@keyv/postgres": "^2.1.4",
    "big.js": "^6.2.2",
    "debug": "^4.4.0",
    "drizzle-orm": "^0.44.2",
    "es-toolkit": "^1.34.1",
    "keyv": "5.3.2",
    "pg": "^8.16.3",
    "valibot": "^1.1.0"
  },
  "devDependencies": {
    "@i/tsconfig": "workspace:*",
    "@testcontainers/postgresql": "^11.0.3",
    "@types/big.js": "6.2.2",
    "@types/debug": "^4.1.12",
    "es-toolkit": "^1.34.1",
    "tsx": "4.19.2",
    "@types/pg": "^8.15.4",
    "drizzle-kit": "^0.31.4",
    "@faker-js/faker": "^9.6.0"
  },
  "version": "1.0.0",
  "private": true,
  "license": "UNLICENSED",
  "type": "module"
}
